{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '43261093-4c9b6888dd775193ca00ecdb2';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport function imageSearch(inputEl) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: `${inputEl}`,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(`${BASE_URL}?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n","export function createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item\">\n    <a class=\"gallery-link\" href=${largeImageURL}>\n        <img \n            class=\"gallery-image\" \n            src=${webformatURL} \n            alt=${tags}\n        />\n        <div class=\"box-card\">\n            <h2 class=\"box-title\">Likes</h2>\n            <p class=\"box-text\">${likes}</p>\n            <h2 class=\"box-title\">Views</h2>\n            <p class=\"box-text\">${views}</p>\n            <h2 class=\"box-title\">Comments</h2>\n            <p class=\"box-text\">${comments}</p>\n            <h2 class=\"box-title\">Downloads</h2>\n            <p class=\"box-text\">${downloads}</p>\n        </div>\n    </a>\n  </li>`\n    )\n    .join('');\n}\n","import { imageSearch } from './js/pixabay-api';\nimport { createMarkup } from './js/render-functions';\n\nconst formEl = document.querySelector('form');\nconst ulEl = document.querySelector('ul');\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const form = event.target;\n  const inputEl = form.elements.imgname.value;\n  if (inputEl === '') {\n    alert('Field must be filled in!');\n    return;\n  }\n\n  imageSearch(inputEl)\n    .then(data => {\n      const tagsArr = data.hits.flatMap(hit => hit.tags.split(','));\n      if (!tagsArr.includes(inputEl)) {\n        alert(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n        return;\n      }\n\n      ulEl.innerHTML = createMarkup(data.hits);\n    })\n    .catch(error => alert(error))\n    .finally(() => form.reset());\n}\n"],"names":["API_KEY","BASE_URL","imageSearch","inputEl","params","response","createMarkup","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","formEl","ulEl","handleSubmit","event","form","data","hit","error"],"mappings":"ssBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,SAASC,EAAYC,EAAS,CACnC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKJ,EACL,EAAG,GAAGG,CAAO,GACb,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAM,GAAGF,CAAQ,IAAIG,CAAM,EAAE,EAAE,KAAKC,GAAY,CACrD,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,CACH,CClBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,mCAC2BL,CAAa;AAAA;AAAA;AAAA,kBAG9BD,CAAY;AAAA,kBACZE,CAAI;AAAA;AAAA;AAAA;AAAA,kCAIYC,CAAK;AAAA;AAAA,kCAELC,CAAK;AAAA;AAAA,kCAELC,CAAQ;AAAA;AAAA,kCAERC,CAAS;AAAA;AAAA;AAAA,QAItC,EACA,KAAK,EAAE,CACZ,CC9BA,MAAMC,EAAS,SAAS,cAAc,MAAM,EACtCC,EAAO,SAAS,cAAc,IAAI,EAExCD,EAAO,iBAAiB,SAAUE,CAAY,EAE9C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMC,EAAOD,EAAM,OACbf,EAAUgB,EAAK,SAAS,QAAQ,MACtC,GAAIhB,IAAY,GAAI,CAClB,MAAM,0BAA0B,EAChC,MACD,CAEDD,EAAYC,CAAO,EAChB,KAAKiB,GAAQ,CAEZ,GAAI,CADYA,EAAK,KAAK,QAAQC,GAAOA,EAAI,KAAK,MAAM,GAAG,CAAC,EAC/C,SAASlB,CAAO,EAAG,CAC9B,MACE,0EACV,EACQ,MACD,CAEDa,EAAK,UAAYV,EAAac,EAAK,IAAI,CAC7C,CAAK,EACA,MAAME,GAAS,MAAMA,CAAK,CAAC,EAC3B,QAAQ,IAAMH,EAAK,MAAK,CAAE,CAC/B"}